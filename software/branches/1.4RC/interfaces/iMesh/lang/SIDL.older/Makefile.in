@SET_MAKE@

MAKE_INC = iMesh-SIDL-Defs.inc
SIDL_FILES = iBase.sidl iMesh.sidl iMesh_SIDL.sidl
SIDL_FILES_PATH = $(srcdir)/iBase.sidl $(srcdir)/iMesh.sidl $(srcdir)/iMesh_SIDL.sidl
SERVER_FILES = mserver/iBase_Error_Impl.cc \
               mserver/iBase_Error_Impl.hh \
	       mserver/iMesh_SIDL_MeshSidl_Impl.cc \
	       mserver/iMesh_SIDL_MeshSidl_Impl.hh 
SERVER_FILES_PATH = $(srcdir)/mserver/iBase_Error_Impl.cc \
                    $(srcdir)/mserver/iBase_Error_Impl.hh \
	            $(srcdir)/mserver/iMesh_SIDL_MeshSidl_Impl.cc \
	            $(srcdir)/mserver/iMesh_SIDL_MeshSidl_Impl.hh 
SOURCE_FILES = $(SIDL_FILES) $(SERVER_FILES) iBase_SIDL_defs.h
DIST_FILES = $(SOURCE_FILES) testcxx.cpp \
             mserver.make Cclient.make Fclient.make
INCLUDES =  -I$(BABEL_DIR)/include -Imserver

CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@

INSTALL_DATA = @INSTALL_DATA@
INSTALL = @INSTALL@
BABEL_DIR = @BABEL_DIR@
USE_BABEL = @USE_BABEL@
BABEL = $(BABEL_DIR)/bin/babel
ECHO = @ECHO@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DAGMC_CONFIG_OPTIONS = @DAGMC_CONFIG_OPTIONS@
DEFINES = @DEFINES@
LIBTOOL = @LIBTOOL@

bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdir = tools/iMesh/SIDL
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

VPATH = @srcdir@

all: $(MAKE_INC) recursive 
	if test "x$(USE_BABEL)" = "xyes"; then \
	  (cd mserver && $(MAKE) -f ../$(srcdir)/mserver.make $@) && \
	  (cd Cclient && $(MAKE) -f ../$(srcdir)/Cclient.make $@) && \
	  (cd Fclient && $(MAKE) -f ../$(srcdir)/Fclient.make $@) ; \
	fi

clean: 
	rm -rf Cclient Fclient
	rm -rf testcxx testcxx.lo testcxx.o .deps .libs
	if test "x$(srcdir)" != "x."; then \
	  rm -rf mserver; \
	else \
	  for file in mserver/*; do \
	    found=0; \
	    for sfile in $(SERVER_FILES); do \
	      if test "x$$file" = "x$$sfile"; then \
	        found=1; \
              fi ; \
            done ; \
            if test "$$found" -eq 0; then rm -f $$file; fi ; \
	  done ; \
	fi

distclean: clean
	rm -f Makefile iMesh-SIDL-Defs.inc

mostlyclean: 
	for dir in Cclient Fclient mclient; do \
	  rm -f $$dir/*.o $$dir/*.o $$dir/*.la $$dir/*.a $$dir/*.so; \
	  rm -rf $$dir/.libs; \
	done

.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

common.make: $(srcdir)/common.make.in $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

$(MAKE_INC): $(srcdir)/$(MAKE_INC).in $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install: $(SIDL_FILES) $(MAKE_INC) install-recursive
	for file in $(SIDL_FILES); do \
	  $(INSTALL_DATA) $(srcdir)/$$file $(DESTDIR)$(includedir)/$$file ; \
	done
	$(INSTALL_DATA) $(MAKE_INC) $(DESTDIR)$(libdir)/$(MAKE_INC)
	$(ECHO) "iMesh_SIDL_includes=-I$(includedir) -I$(includedir)/SIDL" >> $(DESTDIR)$(libdir)/$(MAKE_INC)
	$(ECHO) "iMesh_SIDL_LFDFLAGS=-L${libdir}" >> $(DESTDIR)$(libdir)/$(MAKE_INC)

uninstall: uninstall-recursive
	for file in $(SIDL_FILES); do \
	  rm -f $(DESTDIR)$(includedir)/$$file ; \
	done
	rm -f $(DESTDIR)$(libdir)/$(MAKE_INC)

install-recursive: recursive
	if test "x$(USE_BABEL)" = "xyes"; then \
	  for lib in mserver Cclient Fclient; do \
	    (cd $$lib && \
	      $(MAKE) -f ../$(srcdir)/$${lib}.make install \
	         DESTDIR="$(DESTDIR)" \
	         prefix="$(prefix)" \
	         exec_prefix="$(exec_prefix)" \
	         libdir="$(libdir)" \
	         datarootdir="$(datarootdir)" \
	         datadir="$(datadir)" \
	         includedir="$(includedir)" \
	    ) || exit 1; \
	  done ; \
	fi

uninstall-recursive: recursive
	if test "x$(USE_BABEL)" = "xyes"; then \
	  for lib in mserver Cclient Fclient; do \
	    (cd $$lib && \
	      $(MAKE) -f ../$(srcdir)/$${lib}.make uninstall \
	         DESTDIR="$(DESTDIR)" \
	         prefix="$(prefix)" \
	         exec_prefix="$(exec_prefix)" \
	         libdir="$(libdir)" \
	         datarootdir="$(datarootdir)" \
	         datadir="$(datadir)" \
	         includedir="$(includedir)" \
	    ) || exit 1; \
	  done ; \
	fi

distdir: $(DIST_FILES)
	test -d $(distdir) || $(mkdir_p) $(distdir) || exit 1
	test -d $(distdir)/mserver || $(mkdir_p) $(distdir)/mserver || exit 1
	@for file in $(DIST_FILES); do \
	  $(ECHO) "cp -p $(srcdir)/$$file $(distdir)/$$file"; \
	  cp -p $(srcdir)/$$file $(distdir)/$$file || exit 1; \
	done

recursive: mserver/babel.make Cclient/babel.make Fclient/babel.make common.make

# The --vpath option is broken for some versions of babel, so
# copy files when doing out-of-tree build.
# These should do nothing for in-tree builds because the target 
# and source files are the same file and therefore always have
# the same timestamp.
# Use 'cat' rather than 'cp' so that target files get a clean
# set of permissions (writable, owned by person running make, etc.)
mserver/babel.make: $(SIDL_FILES_PATH) $(SERVER_FILES_PATH)
	test -d mserver || $(mkdir_p) mserver || exit 1
	@if test "x$(srcdir)" != "x."; then \
	  for p in $(SERVER_FILES); do \
	    $(ECHO) "cat $(srcdir)/$$p > $$p"; \
	    cat $(srcdir)/$$p > $$p || exit 1; \
	  done \
	fi
	@if test "x$(USE_BABEL)" = "xyes"; then \
	  $(ECHO) '$(BABEL) -sC++ $(SIDL_FILES_PATH) -o mserver' ; \
	  $(BABEL) -sC++ $(SIDL_FILES_PATH) -o mserver && touch $@; \
	fi

Cclient/babel.make: $(SIDL_FILES)
	test -d Cclient || $(mkdir_p) Cclient || exit 1
	@if test "x$(USE_BABEL)" = "xyes"; then \
	  $(ECHO) '$(BABEL) -cC $(SIDL_FILES_PATH) -o Cclient' ; \
	  $(BABEL) -cC $(SIDL_FILES_PATH) -o Cclient && touch $@; \
	fi

Fclient/babel.make: $(SIDL_FILES)
	test -d Fclient || $(mkdir_p) Fclient || exit 1
	@if test "x$(USE_BABEL)" = "xyes"; then \
	  $(ECHO) '$(BABEL) -cF77 $(SIDL_FILES_PATH) -o Fclient' ; \
	  $(BABEL) -cF77 $(SIDL_FILES_PATH) -o Fclient && touch $@; \
	fi

.SUFFIXES: .cpp .cc .c .lo

check: 
	@test "x$(USE_BABEL)" != "xyes" || $(MAKE) run_testcxx

run_testcxx: testcxx
	@$(ECHO) "./$< $(top_srcdir)/test/3k-tri-sphere.vtk"
	@./$< $(top_srcdir)/test/3k-tri-sphere.vtk || $(ECHO) "<<<<<<<<<<<<<<<< testcxx FAILED >>>>>>>>>>>>>>>>>>>"

testcxx : testcxx.lo mserver/libiMeshserver.la
	$(CXXLINK) $< mserver/libiMeshserver.la

mserver/libiMeshserver.la : all

testcxx.lo : mserver/babel.make

.cpp.lo:
	$(LTCXXCOMPILE) -c -o $@ $<

.c.lo:
	$(LTCOMPILE) -c -o $@ $<

dvi:

pdf:

ps:

html:

info:

man:

installcheck:

.PHONEY: all clean distclean mostlyclean distdir check recursive \
         install install-recursive uninstall uninstall-recursive \
         dvi ps pdf html info man installcheck



