################################################################################
#                           Standard Stuff
################################################################################
AC_INIT(ITAPS, 0.99)
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE

ITAPS_CHECK_COMPILERS
AM_CONDITIONAL(PARALLEL,[test "x$WITH_MPI" != "xno"])
LIBS="-lm"

AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_DISABLE_SHARED
AC_PROG_LIBTOOL

if test "x" != "x$FC"; then
  AC_FC_WRAPPERS
fi

if test "x" != "x$F77"; then
  AC_F77_WRAPPERS
fi

################################################################################
#                              Version Stuff
################################################################################

AC_DEFINE(ITAPS_VERSION,["AC_PACKAGE_VERSION"],[ITAPS Version])
VERSION_MAJOR=`expr AC_PACKAGE_VERSION : '\([[0-9]]*\)'`
VERSION_MINOR=`expr AC_PACKAGE_VERSION : '[[0-9]]*\.\([[0-9]]*\)'`
VERSION_PATCH=`expr AC_PACKAGE_VERSION : '[[0-9]]*\.[[0-9]]*\.\(.*\)'`
test "x" != "x$VERSION_MAJOR" || AC_MSG_ERROR("Invalid version string: AC_PACKAGE_VERSION")
test "x" != "x$VERSION_MINOR" || AC_MSG_ERROR("Invalid version string: AC_PACKAGE_VERSION")
AC_DEFINE_UNQUOTED(ITAPS_VERSION_MAJOR,$VERSION_MAJOR,[ITAPS Major Version])
AC_DEFINE_UNQUOTED(ITAPS_VERSION_MINOR,$VERSION_MINOR,[ITAPS Minor Version])
if test "x" != "x$VERSION_PATCH"; then
  AC_DEFINE_UNQUOTED(ITAPS_VERSION_PATCH,$VERSION_PATCH,[ITAPS Patch Level])
  VERSION_STRING="AC_PACKAGE_STRING"
elif test $VERSION_MINOR -eq 99; then
  VERSION_STRING="AC_PACKAGE_STRING (Alpha)"
else
  VERSION_STRING="AC_PACKAGE_STRING (Beta)"
fi
AC_DEFINE_UNQUOTED(ITAPS_VERSION_STRING,"${VERSION_STRING}",[ITAPS Version String])


################################################################################
#                             System Headers
################################################################################
AC_CHECK_HEADER([ieeefp.h],[DEFINES="$DEFINES -DHAVE_IEEEFP_H"] )
if test "xyes" = "x$enable_debug"; then
  AC_CHECK_HEADER( [valgrind/memcheck.h], [CPPFLAGS="$CPPFLAGS -DVALGRIND"] )
fi

################################################################################
#                              MPI OPTIONS
################################################################################

if test "x$WITH_MPI" != "xno"; then
  DEFINES="$DEFINES -DUSE_MPI"
  AC_CHECK_HEADER([mpi.h],[],[AC_MSG_ERROR([mpi.h not found or not working])])
  AC_MSG_CHECKING([If -DMPICH_IGNORE_CXX_SEEK is necessary])
  AC_LANG_SAVE
  AC_LANG_CPLUSPLUS
  AC_PREPROC_IFELSE([AC_LANG_PROGRAM( [[#include <stdio.h>
     #include <mpi.h>]],[])],
    [AC_MSG_RESULT([no])],
    [save_CPPFLAGS="$CPPFLAGS"
     CPPFLAGS="$CPPFLAGS -DMPICH_IGNORE_CXX_SEEK"
     AC_PREPROC_IFELSE([AC_LANG_PROGRAM( [[#include <stdio.h>
         #include <mpi.h>]],[])],
         [AC_MSG_RESULT([yes]); AM_CPPFLAGS="$AM_CPPLFLAGS -DMPICH_IGNORE_CXX_SEEK" ],
         [AC_MSG_ERROR([mpi.h is not usable])]),
     CPPFLAGS="$save_CPPFLAGS"])
  AC_LANG_RESTORE
fi
AM_CONDITIONAL(USE_MPI, [test "xno" != "x$WITH_MPI"])

###############################################################################
#                           Optional Tools
###############################################################################
  # Define a macro to avoid typing this for each individual tool
  # Usage: ITAPS_OPTIONAL_TOOL( name, default )
  #  name      - name of option
  #  default   - yes/no, $ENABLE_TOOLS overrides this if set
  # Actions:
  #  sets ENABLE_${tool} to 'yes' or 'no'
  #  creates ENABLE_${tool} automake conditional
AC_DEFUN([ITAPS_OPTIONAL_LANGUAGE],[
  itaps_default_$1=$2
  if test "x" != "x$ENABLE_LANGUAGES"; then
    itaps_default_$1="$ENABLE_LANGUAGES"
  fi
  AC_ARG_ENABLE( [$1],
[AC_HELP_STRING([--enable-$1],[Build examples in language: $1])
AC_HELP_STRING([--disable-$1],[Don't build examples in language $1])],
                 [ENABLE_$1=$enableval
DISTCHECK_CONFIGURE_FLAGS="$DISTCHECK_CONFIGURE_FLAGS --enable-$1=\"${enableval}\""
],[ENABLE_$1=${itaps_default_$1}] )
  AM_CONDITIONAL([ENABLE_$1],[test "x${ENABLE_$1}" != "xno"])
  AC_MSG_CHECKING([if $1 examples are to be built])
  AC_MSG_RESULT([${ENABLE_$1}])
])
  # The default for all languages
AC_ARG_ENABLE( [languages], [
AC_HELP_STRING([--enable-languages],[Build all languages by default])
AC_HELP_STRING([--disable-languages],[Disable all languages by default])],
                         [ENABLE_LANGUAGES=$enableval],[ENABLE_LANGUAGES=] )
  # Individual languages
ITAPS_OPTIONAL_LANGUAGE([cxx],    [yes])
ITAPS_OPTIONAL_LANGUAGE([c],    [yes])
ITAPS_OPTIONAL_LANGUAGE([f77],    [no])
ITAPS_OPTIONAL_LANGUAGE([f90],    [no])

################################################################################
#                           iGeom
################################################################################
AC_ARG_WITH(igeom, 
[AC_HELP_STRING([--with-igeom=DIR], [Specify directory containing iGeom])],
[IGEOM_DIR=$withval
 DISTCHECK_CONFIGURE_FLAGS="$DISTCHECK_CONFIGURE_FLAGS --with-igeom=\"${withval}\""
 ], [IGEOM_DIR=])
case "x$IGEOM_DIR" in
  xno|x)
    IGEOM_MISSING=yes
    ;;
  xyes)
    AC_MSG_ERROR([--with-igeom requires an argument])
    ;;
  *)
    if ! test -d "$IGEOM_DIR"; then
      AC_MSG_WARN([$IGEOM_DIR : not a directory.])
    fi
    IGEOM_MISSING=no
    AC_CHECK_FILE([${IGEOM_DIR}/lib/iGeom-Defs.inc],
                  [IGEOM_CONFIG_OPTIONS="include ${IGEOM_DIR}/lib/iGeom-Defs.inc";
                   DEFINES="$DEFINES -DIGEOM"],
                  [AC_CHECK_FILE([${IGEOM_DIR}/iGeom-Defs.inc],
                                 [IGEOM_CONFIG_OPTIONS="include ${IGEOM_DIR}/iGeom-Defs.inc";
                   DEFINES="$DEFINES -DIGEOM"],
                                 [AC_MSG_WARN([$IGEOM_DIR : not a configured iGeom]); 
                                  IGEOM_MISSING=yes])
                  ])
    ;;
esac
AC_SUBST(IGEOM_DIR)
AC_SUBST(IGEOM_CONFIG_OPTIONS)
AM_CONDITIONAL( HAVE_IGEOM, [test "x$IGEOM_MISSING" = "xno"] )

################################################################################
#                           iMesh
################################################################################
AC_ARG_WITH(imesh, 
[AC_HELP_STRING([--with-imesh=DIR], [Specify directory containing iMesh])],
[IMESH_DIR=$withval
 DISTCHECK_CONFIGURE_FLAGS="$DISTCHECK_CONFIGURE_FLAGS --with-imesh=\"${withval}\""
 ], [IMESH_DIR=])
case "x$IMESH_DIR" in
  xno|x)
    IMESH_MISSING=yes
    ;;
  xyes)
    AC_MSG_ERROR([--with-imesh requires an argument])
    ;;
  *)
    if ! test -d "$IMESH_DIR"; then
      AC_MSG_WARN([$IMESH_DIR : not a directory.])
    fi
    IMESH_MISSING=no
    AC_CHECK_FILE([${IMESH_DIR}/lib/iMesh-Defs.inc],
                  [IMESH_CONFIG_OPTIONS="include ${IMESH_DIR}/lib/iMesh-Defs.inc";
                   DEFINES="$DEFINES -DIMESH"],
                  [AC_CHECK_FILE([${IMESH_DIR}/iMesh-Defs.inc],
                                 [IMESH_CONFIG_OPTIONS="include ${IMESH_DIR}/iMesh-Defs.inc";
                   DEFINES="$DEFINES -DIMESH"],
                                 [AC_MSG_WARN([$IMESH_DIR : not a configured iMesh]); 
                                  IMESH_MISSING=yes])
                  ])
    ;;
esac
AC_SUBST(IMESH_DIR)
AC_SUBST(IMESH_CONFIG_OPTIONS)
AM_CONDITIONAL( HAVE_IMESH, [test "x$IMESH_MISSING" = "xno"] )

################################################################################
#                           iField
################################################################################
AC_ARG_WITH(ifield, 
[AC_HELP_STRING([--with-ifield=DIR], [Specify directory containing iField])],
[IFIELD_DIR=$withval
 DISTCHECK_CONFIGURE_FLAGS="$DISTCHECK_CONFIGURE_FLAGS --with-ifield=\"${withval}\""
 ], [IFIELD_DIR=])
case "x$IFIELD_DIR" in
  xno|x)
    IFIELD_MISSING=yes
    ;;
  xyes)
    AC_MSG_ERROR([--with-ifield requires an argument])
    ;;
  *)
    if ! test -d "$IFIELD_DIR"; then
      AC_MSG_WARN([$IFIELD_DIR : not a directory.])
    fi
    IFIELD_MISSING=no
    AC_CHECK_FILE([${IFIELD_DIR}/lib/iField-Defs.inc],
                  [IFIELD_CONFIG_OPTIONS="include ${IFIELD_DIR}/lib/iField-Defs.inc";
                   DEFINES="$DEFINES -DIFIELD"],
                  [AC_CHECK_FILE([${IFIELD_DIR}/iField-Defs.inc],
                                 [IFIELD_CONFIG_OPTIONS="include ${IFIELD_DIR}/iField-Defs.inc";
                   DEFINES="$DEFINES -DIFIELD"],
                                 [AC_MSG_WARN([$IFIELD_DIR : not a configured iField]); 
                                  IFIELD_MISSING=yes])
                  ])
    ;;
esac
AC_SUBST(IFIELD_DIR)
AC_SUBST(IFIELD_CONFIG_OPTIONS)
AM_CONDITIONAL( HAVE_IFIELD, [test "x$IFIELD_MISSING" = "xno"] )

################################################################################
#                           iRel
################################################################################
AC_ARG_WITH(irel, 
[AC_HELP_STRING([--with-irel=DIR], [Specify directory containing iRel])],
[IREL_DIR=$withval
 DISTCHECK_CONFIGURE_FLAGS="$DISTCHECK_CONFIGURE_FLAGS --with-irel=\"${withval}\""
 ], [IREL_DIR=])
case "x$IREL_DIR" in
  xno|x)
    IREL_MISSING=yes
    ;;
  xyes)
    AC_MSG_ERROR([--with-irel requires an argument])
    ;;
  *)
    if ! test -d "$IREL_DIR"; then
      AC_MSG_WARN([$IREL_DIR : not a directory.])
    fi
    IREL_MISSING=no
    AC_CHECK_FILE([${IREL_DIR}/lib/iRel-Defs.inc],
                  [IREL_CONFIG_OPTIONS="include ${IREL_DIR}/lib/iRel-Defs.inc";
                   DEFINES="$DEFINES -DIREL"],
                  [AC_CHECK_FILE([${IREL_DIR}/iRel-Defs.inc],
                                 [IREL_CONFIG_OPTIONS="include ${IREL_DIR}/iRel-Defs.inc";
                   DEFINES="$DEFINES -DIREL"],
                                 [AC_MSG_WARN([$IREL_DIR : not a configured iRel]); 
                                  IREL_MISSING=yes])
                  ])
    ;;
esac
AC_SUBST(IREL_DIR)
AC_SUBST(IREL_CONFIG_OPTIONS)
AM_CONDITIONAL( HAVE_IREL, [test "x$IREL_MISSING" = "xno"] )

################################################################################
#                           Output Files
################################################################################
AC_SUBST([INCLUDES])
AC_SUBST([DEFINES])
AC_SUBST([AM_CPPFLAGS])
AC_SUBST([AM_LDFLAGS])
AC_SUBST([AM_CXXFLAGS])
AC_SUBST([AM_CFLAGS])
AC_SUBST([DISTCHECK_CONFIGURE_FLAGS])

AC_ARG_VAR([FC], [FORTRAN compiler command])
AC_CONFIG_HEADERS([ITAPSVersion.h])
AC_CONFIG_FILES([Makefile 
		 IMESH/Makefile
		 IMESH/HelloMesh/Makefile
		 IMESH/FindAdjacency/Makefile
		 IMESH/ListSetsNTags/Makefile
		 IMESH/SimpleIterator/Makefile
		 IMESH/perftest/Makefile
                 ])
#		 IGEOM/Makefile
#		 IFIELD/Makefile
#		 IREL/Makefile

AC_OUTPUT

AC_MSG_RESULT([C:   $CC $CFLAGS])
AC_MSG_RESULT([C++: $CXX $CXXFLAGS])
AC_MSG_RESULT([Fortran77: $F77 $FFLAGS])
AC_MSG_RESULT([Fortran90: $FC $FCFLAGS])

if test "x$IGEOM_MISSING" != "xyes"; then
  AC_MSG_RESULT([iGeom: $IGEOM_DIR])
fi
if test "x$IMESH_MISSING" != "xyes"; then
  AC_MSG_RESULT([iMesh: $IMESH_DIR])
fi
if test "x$IFIELD_MISSING" != "xyes"; then
  AC_MSG_RESULT([iField: $IFIELD_DIR])
fi
if test "x$IREL_MISSING" != "xyes"; then
  AC_MSG_RESULT([iRel: $IREL_DIR])
fi
